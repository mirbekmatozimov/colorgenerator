{"version":3,"sources":["utils.js","SingleColor.js","App.js","index.js"],"names":["componentToHex","c","hex","toString","length","rgbToHex","r","g","b","SingleColor","rgb","weight","index","hexColor","a","useState","alert","setAlert","bcg","join","hexValue","useEffect","timeout","setTimeout","clearTimeout","console","log","className","style","backgroundColor","onClick","navigator","clipboard","writeText","App","color","setColor","error","setError","Values","all","list","setList","onSubmit","e","preventDefault","colors","type","value","onChange","target","placeholder","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAAA,SAASA,EAAeC,GACtB,IAAIC,EAAMD,EAAEE,SAAS,IACrB,OAAqB,GAAdD,EAAIE,OAAc,IAAMF,EAAMA,EAOxBG,MAJf,SAAkBC,EAAGC,EAAGC,GACtB,MAAO,IAAMR,EAAeM,GAAKN,EAAeO,GAAKP,EAAeQ,ICyBvDC,EA5BK,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,IAAKC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,EAAQ,EACjCC,oBAAS,GADwB,mBACpDC,EADoD,KAC7CC,EAD6C,KAErDC,EAAMR,EAAIS,KAAK,KAEfC,GADMf,EAAQ,WAAR,cAAYK,IACV,WAAOG,IAQrB,OAPAQ,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBN,GAAS,KACR,KACH,OAAO,kBAAMO,aAAaF,MACzB,CAACN,IACJS,QAAQC,IAAIZ,GAEV,6BACEa,UAAS,gBAAWf,EAAQ,IAAM,cAAzB,YAA0CE,GACnDc,MAAO,CAAEC,gBAAgB,OAAD,OAASX,EAAT,MACxBY,QAAS,WACPb,GAAS,GACTc,UAAUC,UAAUC,UAAUb,KAGhC,uBAAGO,UAAU,iBAAiBhB,EAA9B,KACA,uBAAGgB,UAAU,eAAeP,GAC3BJ,GAAS,uBAAGW,UAAU,SAAb,yB,gBC4EDO,MAjGf,WAAgB,IAAD,EACanB,mBAAS,IADtB,mBACNoB,EADM,KACCC,EADD,OAEarB,oBAAS,GAFtB,mBAENsB,EAFM,KAECC,EAFD,OAGWvB,mBAAS,IAAIwB,IAAO,WAAWC,IAAI,KAH9C,mBAGNC,EAHM,KAGAC,EAHA,KAeb,OACE,oCACE,6BAASf,UAAU,YAAYC,MAAO,CAACC,gBAAiBM,IACtD,wBAAIR,UAAU,cAAd,mBACA,0BAAMgB,SAdS,SAACC,GACpBA,EAAEC,iBACF,IACE,IAAIC,EAAS,IAAIP,IAAOJ,GAAOK,IAAI,IACnCE,EAAQI,GACR,MAAOT,GACPC,GAAS,GACTb,QAAQC,IAAIW,MAQR,2BACEU,KAAK,OACLC,MAAOb,EACPc,SAAU,SAACL,GAAD,OAAOR,EAASQ,EAAEM,OAAOF,QACnCG,YAAY,UACZxB,UAAS,UAAKU,EAAQ,QAAU,QAElC,4BAAQV,UAAU,MAAMoB,KAAK,UAA7B,YAMJ,6BAASpB,UAAU,UAChBc,EAAKW,KAAI,SAACjB,EAAOvB,GAChB,OACEA,EAAQ,GAER,kBAAC,EAAD,eACEyC,IAAKzC,GACDuB,EAFN,CAGEvB,MAAOA,EACPC,SAAUsB,EAAMjC,IAChBY,EAAE,UAIR,yBAAKa,UAAU,eACZc,EAAKW,KAAI,SAACjB,EAAOvB,GAChB,OACGA,GAAS,GAAKA,EAAQ,IAEvB,kBAAC,EAAD,eACEyC,IAAKzC,GACDuB,EAFN,CAGEvB,MAAOA,EACPC,SAAUsB,EAAMjC,IAChBY,EAAE,WAKV,yBAAKa,UAAU,eACZc,EAAKW,KAAI,SAACjB,EAAOvB,GAChB,OACGA,GAAS,IAAMA,EAAQ,IAExB,kBAAC,EAAD,eACEyC,IAAKzC,GACDuB,EAFN,CAGEvB,MAAOA,EACPC,SAAUsB,EAAMjC,IAChBY,EAAE,WAKV,yBAAKa,UAAU,eACZc,EAAKW,KAAI,SAACjB,EAAOvB,GAChB,OACGA,GAAS,IAAMA,EAAQ,IAExB,kBAAC,EAAD,eACEyC,IAAKzC,GACDuB,EAFN,CAGEvB,MAAOA,EACPC,SAAUsB,EAAMjC,IAChBY,EAAE,cCvFlBwC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.7ca0cbef.chunk.js","sourcesContent":["function componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? '0' + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport default rgbToHex;\n","import React, { useState, useEffect } from 'react'\nimport rgbToHex from './utils'\n\nconst SingleColor = ({ rgb, weight, index, hexColor, a }) => {\n  const [alert, setAlert] = useState(false)\n  const bcg = rgb.join(',')\n  const hex = rgbToHex(...rgb)\n  const hexValue = `#${hexColor}`\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setAlert(false)\n    }, 3000)\n    return () => clearTimeout(timeout)\n  }, [alert])\n  console.log(a)\n  return (\n    <article\n      className={`color ${index > 10 && 'color-light'} ${a}`}\n      style={{ backgroundColor: `rgb(${bcg})` }}\n      onClick={() => {\n        setAlert(true)\n        navigator.clipboard.writeText(hexValue)\n      }}\n    >\n      <p className='percent-value'>{weight}%</p>\n      <p className='color-value'>{hexValue}</p>\n      {alert && <p className='alert'>copied to clipboard</p>}\n    </article>\n  )\n}\n\nexport default SingleColor\n","import React, { useState } from 'react'\nimport SingleColor from './SingleColor'\n\nimport Values from 'values.js'\n\nfunction App() {\n  const [color, setColor] = useState('')\n  const [error, setError] = useState(false)\n  const [list, setList] = useState(new Values('#f15025').all(10))\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    try {\n      let colors = new Values(color).all(10)\n      setList(colors)\n    } catch (error) {\n      setError(true)\n      console.log(error)\n    }\n  }\n  return (\n    <>\n      <section className='container' style={{backgroundColor: color}}>\n        <h3 className=\"main-title\">color generator</h3>\n        <form onSubmit={handleSubmit}>\n          <input\n            type='text'\n            value={color}\n            onChange={(e) => setColor(e.target.value)}\n            placeholder='#f15025'\n            className={`${error ? 'error' : null}`}\n          />\n          <button className='btn' type='submit'>\n            submit\n          </button>\n        </form>\n      </section>\n\n      <section className='colors'>\n        {list.map((color, index) => {\n          return (\n            index < 6\n            &&\n            <SingleColor\n              key={index}\n              {...color}\n              index={index}\n              hexColor={color.hex}\n              a=\"a\"\n            />\n          )\n        })}\n        <div className=\"b-container\">\n          {list.map((color, index) => {\n            return (\n              (index >= 6 && index < 10)\n              &&\n              <SingleColor\n                key={index}\n                {...color}\n                index={index}\n                hexColor={color.hex}\n                a=\"b\"\n              />\n            )\n          })}\n        </div>\n        <div className=\"c-container\">\n          {list.map((color, index) => {\n            return (\n              (index >= 11 && index < 15)\n              &&\n              <SingleColor\n                key={index}\n                {...color}\n                index={index}\n                hexColor={color.hex}\n                a=\"c\"\n              />\n            )\n          })}\n        </div>\n        <div className=\"d-container\">\n          {list.map((color, index) => {\n            return (\n              (index >= 15 && index < 22)\n              &&\n              <SingleColor\n                key={index}\n                {...color}\n                index={index}\n                hexColor={color.hex}\n                a=\"d\"\n              />\n            )\n          })}\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}